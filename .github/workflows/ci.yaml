name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: ðŸ“¥ Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint

      - name: Test (unit) with coverage
        run: pnpm test:coverage

      - name: PR Vitest Coverage Summary
        if: github.event_name == 'pull_request'
        uses: hyperse-io/vitest-coverage-reporter@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          name: "Unit Tests"
          file-coverage-mode: changes

      - name: Generate coverage badges
        if: github.ref == 'refs/heads/main'
        run: pnpm test:coverage && pnpm generate-coverage-report

      - name: Test (unit) with coverage (Vitest)
        run: pnpm test:coverage | tee coverage/coverage.txt

      - name: PR Coverage Comment
        if: github.event_name == 'pull_request'
        id: cov
        uses: MishaKav/jest-coverage-comment@v1.0.28
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          coverage-summary-path: ./coverage/coverage-summary.json
          coverage-path: ./coverage/coverage.txt
          title: Unit Tests Coverage
          summary-title: Summary
          badge-title: Coverage
          report-only-changed-files: false
          remove-links-to-lines: true
          create-new-comment: false

      - name: Add coverage to Job Summary
        if: always()
        run: |
          echo "## ðŸ§ª Coverage" >> "$GITHUB_STEP_SUMMARY"
          echo '${{ steps.cov.outputs.summaryHtml }}' >> "$GITHUB_STEP_SUMMARY"

      - name: Push coverage artifacts to "coverage" branch
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./coverage
          publish_branch: coverage
          allow_empty_commit: true

      # Optional Storybook build/upload (disabled by default)
      # - name: Build Storybook
      #   run: pnpm build-storybook
      # - name: Upload Storybook artifact
      #   if: always()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: storybook-static
      #     path: storybook-static
      #     if-no-files-found: ignore
